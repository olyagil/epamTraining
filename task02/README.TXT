Условие: Порт. Корабли заходят в порт для разгрузки и загрузки контейнеров и
швартуются к причалам. У каждого причала может стоять только один корабль.
Контейнеры перегружаются с корабля на склад порта и\или со склада на корабль.
Число контейнеров не может превышать емкость склада или корабля. Каждый корабль
обязательно должен быть обслужен.

Потоки - корабли. Распределяющий ресурс - склад.

Файл data.txt:
первое число - емкость склада.
второе - количество причалов.
третье - количество кораблей.
четвертое - максимально допустимая емкость корабля.

Рандомно задаем:
заполненную емкость склада
заполненную емкость корабля
действие с кораблем (разгрузить/загрузить)

В начале корабль пришвартовываем к причалу. Рандомно определяем, что нужно
сделать с кораблем.
Если корабль пуст, а он пришел разгружаться, то отправляем его на загрузку.
Если корабль заполнен, а он пришел загружаться, то отправляем его на разгрузку.
Если у склада не хватает контейнеров для корабля, то корабль загружаем частично.
Если у склада не хватает свободного места, то корабль разгружаем частично.
После обслуживания корабля, отшвартовываем его от причала. И на этот причал
может пришвартоваться другой корабль.

В результате Callable возвращаем информацию о заполненности корабля.

Ссылка на UML класса DataCreator
https://github.com/olyagil/epamTraining/blob/master/task02/uml/creator.png
Ссылка на UML пакета entity
https://github.com/olyagil/epamTraining/blob/master/task02/uml/entity.png
